#!/bin/bash

source /usr/local/lib/libre-core

# Display lab header message
function labHeader {
  isVerbose
  if [ "$?" -eq 1 ] ; then
    cat /usr/local/lib/libre-lab.txt
  fi
}

function labPlaybookCall() {
  export ANSIBLE_CONFIG=/tmp/current_lab/ansible.cfg
  if (ansible-playbook /tmp/current_lab/$1.yml --syntax-check) then
    isDebug
    if [ "$?" -eq 1 ] ; then
      ansible-playbook /tmp/current_lab/$1.yml -e grade_result_file=/tmp/libre.txt
      retc=$?
      if [ $retc -eq 0 ]; then
        echoOK "Playbook ${1} ended"
      else
        echoError "Playbook ${1} ended with error"
      fi
    else
      ansible-playbook /tmp/current_lab/$1.yml -e grade_result_file=/tmp/libre.txt 1> /tmp/a
      retc=$?
      if [ $retc -eq 0 ]; then
        ret=$(cat /tmp/a | tail -n 2 | head -n 1)
        echoOK $ret
        echoOK "Playbook ${1} ended"
      else
        cat /tmp/a | grep -A 30 "^fatal:"
        echoError "Playbook ${1} ended with error"
      fi
      rm -f /tmp/a
    fi
  fi
}

# Call lab playbook
function labPlaybook {
  labHeader
  checkIfSession
  param=""
  if [[ $2 != "" ]] ; then
    param="local -e lab_current=$2";
  fi

  if [[ $1 == 'status' ]] ; then
    runLibrePlaybook lab $1 $2;
    exit 0;
  fi

  if (runLibrePlaybook lab pre-$1 $param) then
    if [[ $1 == 'reset' ]] ; then
      labPlaybookCall "stop"
      labPlaybookCall "start"
    else
      labPlaybookCall $1
    fi
    runLibrePlaybook lab post-$1 $param
  fi
  exit 0;
}

# Display lab info and exit
function labInformation {
  labHeader
  checkIfSession
  coreInformation
  exit 0;
}

# Display lab welcome and exit
function labWelcome {
  labHeader
  coreInformation
  labUsage
  exit 0;
}

# Display version info and exit
function labVersion {
  coreVersion
  exit 0;
}

# Display libre-lab usage
function labUsage {
cat <<EOF

Lab training management command line.

Usage:
  libre-lab [command]

- Generic commands:
  start            start lab
  stop             stop lab
  reset            reset lab
  grade            grade lab
  status           get status of the current lab
  usage            get command line usage information
  info             give information about current libre installation
  version          give information about current libre version
EOF
}
