---
- name: "config : Get user infra configuration file {{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_infra }} details"
  stat:
    path: "{{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_infra }}"
  register: r_libre_infra_userconf_details
- name: "config : Configure infrastructure type"
  pause:
   prompt: "What kind of infrastructure backend do you whan to use (self,prem,aws) ?"
  register: infra_type 
  when: libre_infra is undefined and infra_type is undefined
- name: "config : Set libre_infra fact from default {{infra_type}} infra"
  set_fact:
    libre_infra: "{{ config_infra[infra_type|default(libre_infra_default)] }}"
  when: infra_type is defined
- name: "config : Set libre_infra {{infra_type}} state to configured"
  set_fact:
    libre_infra: "{{ libre_infra|combine({'state': 'configured' }, recursive=True) }}"
  when: infra_type is defined
- name: "config : Config {{ libre_infra.type }} infrastructure"
  include_tasks: "{{ libre_infra.type }}/config.yml"
- name: "config : Reload infra configuration file details"
  stat:
    path: "{{ config_libre.directory.conf }}/{{ r_infra_config_file }}"
  register: r_infra_conf_details
- name: "config : User infra configuration file {{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_infra }} exist"
  assert:
    that: r_libre_infra_userconf_details.stat.exists
    msg: "User infra configuration file {{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_infra }} doesn't exist"
- name: "config : User infra configuration is loaded"
  assert:
    that: config_infra is defined
    msg: "Session configuration {{ r_libre_myconfile_infra }} is not loaded"
- name: "config : Log config action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "Infrastructure {{ libre_infra.type }} is configured"
    log_component: infra
    log_action: config {{ libre_infra.type }} infrastructure