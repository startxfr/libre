---
- name: "aws : provision : network : Create VPC {{libre_session.id}}-vpc in {{ libre_infra.ec2.region }}"
  ec2_vpc_net:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    name: "{{libre_session.id}}-vpc"
    cidr_block: 172.22.0.0/16
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{libre_session.id}}-vpc"
      Session: "{{ libre_session.id }}"
      Course: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ libre_session.instructor }}"
  register: r_libre_vpc
- name: "aws : provision : network : Create classroom subnet in {{libre_session.id}}-vpc"
  ec2_vpc_subnet:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ r_libre_vpc.vpc.id }}"
    cidr: "172.22.{{ student.workstation|int }}.0/24"
    az: "{{ libre_infra.ec2.region }}b"
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{libre_session.id}}-{{ student.workstation|int }}-subnet"
      Session: "{{ libre_session.id }}"
      Course: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ libre_session.instructor }}"
  register: classroom_subnet
  when: r_libre_vpc.vpc.id is defined
  loop: "{{ libre_session.students }}"
  loop_control:
    loop_var: student
    label: "{{ student.workstation }} - {{ student.name }}"
- name: "aws : provision : network : Create Internet Gateway in {{libre_session.id}}-vpc"
  ec2_vpc_igw:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ r_libre_vpc.vpc.id }}"
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{libre_session.id}}-igw"
      Session: "{{ libre_session.id }}"
      Course: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ libre_session.instructor }}"
  register: igw
  when: r_libre_vpc.vpc.id is defined
- name: "aws : provision : network : set list subnet-id"
  set_fact:
    subnet_ids: "{{ subnet_ids + [subnet.subnet.id] }}"
  loop: "{{ classroom_subnet.results }}" 
  loop_control:
    loop_var: subnet
    label: "{{ subnet.subnet.id }}"
- name: "aws : provision : network : Create public route table for {{libre_session.id}}-vpc subnet"
  ec2_vpc_route_table:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ r_libre_vpc.vpc.id }}"
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{libre_session.id}}-route-public"
      Session: "{{ libre_session.id }}"
      Course: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ libre_session.instructor }}"
    subnets: "{{ subnet_ids }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table
  loop: "{{ classroom_subnet.results }}"
  loop_control:
    loop_var: subnet
    label: "{{ subnet.subnet.id }}"
  when: r_libre_vpc.vpc.id is defined
- name: "aws : provision : network : Create security group for {{ r_libre_vpc.vpc.id }} in {{ libre_infra.ec2.region }}"
  ec2_group:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ r_libre_vpc.vpc.id }}"
    region: "{{ libre_infra.ec2.region }}"
    name: openAll
    description: security group for {{ libre_session.course }}
    tags:
      Name: "{{libre_session.id}}-sg"
      Session: "{{ libre_session.id }}"
      Course: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ libre_session.instructor }}"
    rules:
      - proto: all
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
  register: security_group
  when: r_libre_vpc.vpc.id is defined
- name: "aws : provision : network : Prepare Network description for {{libre_session.id}} session"
  set_fact:
    last_vpc: 
      vpc_id: "{{ r_libre_vpc.vpc.id }}"
      vpc_subnet_id: "{{ subnet.subnet.id }}"
      security_group_id: "{{ security_group.group_id }}"
      public_gateway_id: "{{ igw.gateway_id }}"
      public_route_table_id: "{{ public_route_table.results[0].route_table.id }}"
  loop: "{{ classroom_subnet.results }}"
  loop_control:
    loop_var: subnet
    label: "{{ subnet.subnet.id }}"
- name: "aws : provision : network : Add {{libre_session.id}} session network description to list_networks"
  set_fact:
    list_networks: "{{ list_networks + [ last_vpc ] }}"
