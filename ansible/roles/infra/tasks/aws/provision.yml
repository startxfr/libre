---
- name: "aws : provision : Set list_networks"
  set_fact:
    list_networks: []
    list_instances: []
    list_dns: []
    subnet_ids: []
    flat_inventory: []

- name: "aws : provision : Create Network environments"
  include_tasks: provision/network.yml
- name: "aws : provision : Create {{ libre_session.students|length }} students environments"
  include_tasks: provision/instance.yml
  vars:
    student: "{{std}}" 
    labenv: "{{std.workstation|int}}" 
  loop: "{{ libre_session.students }}"
  loop_control:
    loop_var: std
    label: "{{ std.workstation }} - {{ std.name }}"
- name: "aws : provision : Create DNS environments"
  include_tasks: provision/dns.yml
- name: "aws : provision : Record Inventory"
  include_tasks: provision/inventory.yml
- name: "aws : provision : Wait for the instances to boot by checking the ssh port"
  wait_for:
    host: "{{instance.public_ip}}"
    port: 22
    delay: 0
    sleep: 2
    timeout: 60
    state: started
  loop: "{{ list_instances }}"
  loop_control:
    loop_var: instance
    label: "{{ instance.public_ip }}"

- name: "aws : provision : Set infrastructure state to provisionned"
  set_fact:
    libre_infra: "{{ libre_infra|combine({'state': 'provisionned' }, recursive=True) }}"
- name: "aws : provision : Update infrastructure config file {{ config_libre.directory.conf }}/{{ r_infra_config_file }}"
  template:
    src: templates/libre-infra.j2
    dest: "{{ config_libre.directory.conf }}/{{ r_infra_config_file }}"
- name: "aws : provision : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_tmp + '/' + r_libre_tmpfile, errors='ignore') | default('') }}"
- name: "aws : provision : Generate LIBRE report at {{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
  template:
    src: templates/libre_report-provision.j2
    dest: "{{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
#    owner: root
    group: "{{ r_libre_group }}"
    mode: 0666 
  delegate_to: localhost
- name: "aws : provision : Log provision action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "AWS infrastructure is Provisionned"
    log_component: infra-aws
    log_action: provision
    
- name: "aws : provision : Infrastructure provisionning is finish"
  debug:
    msg:
      - " "
      - "We are happy to report that classroom infrastructure {{ libre_session.course }}.{{ libre_infra.route53.domain }} was successfully provisioned on AWS infrastructure"
      - " "
      - "Here are some interesting characteristics of this classroom infrastructure:"
      - " "
      - "  - Instructor: instructor.{{ libre_session.course }}.{{ libre_infra.route53.domain }}"
#      - "  - IP address: {{ ec2.tagged_instances[0].public_ip }}"
      - "  - Type: {{ libre_infra.ec2.type }}"
      - "  - Region: {{ libre_infra.ec2.region }}"
      - "  - SSH User: {{ libre_infra.ssh.user }}"
      - "  - SSH Key: {{ libre_infra.ssh.keyname }}.pem"
      - "  - Size: {{ libre_session.students|length }} students x {{ libre_infra.ec2.classroom|length }} workstations"
      - " "
      - "You must finish your installation by running the following command :"
      - "  ansible-playbook -i /usr/share/libre/conf/inventory playbooks/infra-aws/provision-post.yml"
      - " "
      - " Have a happy setup ;)"
#- name: "provision : Send a mail for notification"
#  mail:
##     from: cl@startx.fr
#    to: cl@startx.fr
#    subject: "Classroom {{ libre_session.course }}.{{ libre_infra.route53.domain }} has been provisioned"
#    body: |
#      We are happy to report that classroom infrastructure {{ libre_session.course }}.{{ libre_infra.route53.domain }} was successfully provisioned on AWS infrastructure
#
#      Here are some interesting characteristics of this classroom infrastructure:
#
#        - Instructor: instructor.{{ libre_session.course }}.{{ libre_infra.route53.domain }}
#        - IP address: {{ ec2.tagged_instances[0].public_ip }}
#        - Type: {{ libre_infra.ec2.type }}
#        - Region: {{ libre_infra.ec2.region }}
#        - SSH User: {{ libre_infra.ssh.user }}
#        - SSH Key: {{ libre_infra.ssh.keyname }}.pem
#        - Size: {{ libre_session.students|length }} students x {{ libre_infra.ec2.classroom|length }} workstations"
#
#     You must finish your installation by running the following command :
#       ansible-playbook -i /usr/share/libre/conf/inventory playbooks/infra-aws/provision-post.yml
#
#     Have a happy setup ;)

