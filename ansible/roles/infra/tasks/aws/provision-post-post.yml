---
- name: "install-postcheck : Install the instructor environment"
  become: yes
  delegate_to: "instructor.{{ libre_session.id }}.{{ libre_infra.route53.domain }}"
  block:
  - name: "aws : provision-post-post : Change hostname for instructor"
    hostname:
      name: "instructor-{{ libre_session.id }}"
  - name: "aws : provision-post-post : Update instructor /etc/hosts file"
    copy:
      src: /etc/hosts
      dest: /etc/hosts
  - name: "install_services : Ensure docker packages are installed on instructor"
    yum:
      name: docker
  - name: "install_services : Ensure docker service is running on instructor"
    systemd:
      name: docker
      state: started
  - name: "aws : provision-post-post : Copy session {{ libre_session.id }} configuration to instructor"
    copy:
      src: "{{ config_libre.directory.conf }}/"
      dest: "{{ config_libre.directory.conf }}"
      owner: "{{ libre_user | default(r_libre_user) }}"
      group: "{{ libre_group | default(r_libre_group) }}"

- name: "aws : provision-post-post : Log instructor post-provision action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "AWS infrastructure has post-provisioned instructor workstation"
    log_component: infra-aws
    log_action: post-provision on instructor
- name: "aws : provision-post-post : Copy course {{ libre_session.course }} playbooks to temporary tgz file"
  archive:
    path: "{{ r_session_dir_course }}/playbooks/labs/"
    dest: "/tmp/playbooks-labs.tgz"
- name: "aws : provision-post-post : Load Post-provision post-tasks for workstations"
  include_tasks: "provision-post-post_workstation.yml"
  vars:
    classroom: "{{ libre_infra.ec2.classroom }}"
    student: "{{ std }}"
    libre_user: "student"
  loop: "{{ libre_session.students }}"
  loop_control:
    loop_var: std
    label: "{{ std.name }}"
- name: "aws : provision-post-post : Remove course {{ libre_session.course }} playbooks temporary tgz file"
  file:
    path: "/tmp/playbooks-labs.tgz"
    state: absent
  
- name: "aws : provision-post-post : Set infrastructure state to provisioned"
  set_fact:
    libre_infra: "{{ libre_infra|combine({'state': 'post-provisioned' }, recursive=True) }}"
- name: "aws : provision-post-post : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_result_file, errors='ignore') | default('') }}"
  delegate_to: localhost
- name: "aws : provision-post-post : Generate LIBRE report at {{ r_libre_result_file }}"
  template:
    src: templates/libre_report-provision-post.j2
    dest: "{{ r_libre_result_file }}"
    owner: "{{ libre_user | default(r_libre_user) }}"
    group: "{{ libre_group | default(r_libre_group) }}"
    mode: 0666
  delegate_to: localhost
- name: "aws : provision-post-post : Log post-provision action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "AWS infrastructure is post Post-provisioned"
    log_component: infra-aws
    log_action: post-provision on instructor
