---
- name: "self : provision : Install KVM packages"
  yum:
    name:
    - kvm
    - qemu-kvm
    - libvirt
    - libvirt-python
    - libguestfs-tools
    - virt-install
- name: "self : provision : Check KVM module is available"
  shell: "lsmod | grep -i kvm"
  failed_when: cmd_return.rc == 2
  become: yes
  register: cmd_return
- name: "self : provision : Ensure KVM module is available"
  fail:
    msg: |
      Could not provision self infrastructure because KVM kernel module is not available. 
      You must run self infrastructure on workstation with virtualisation kernel module loaded.
  when:
  - cmd_return.rc != 0
  become: yes
- name: "self : provision : Enable service libvirtd"
  systemd:
    name: libvirtd
    enabled: yes
    state: started
  become: yes
  when:
  - cmd_return.rc == 0
- name: "self : provision : Start vboxdrv service"
  systemd:
    name: vboxdrv
    state: started
  when:
  - cmd_return.rc != 0
- name: "self : provision : Create inventory directory {{ config_libre.directory.conf }}/inventory"
  file:
    state: directory
    path: "{{ config_libre.directory.conf }}/inventory"
    mode: 0775
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
    recurse: yes
- name: "self : provision : Generate inventory {{ config_libre.directory.conf }}/inventory/instructor.yml"
  template:
    src: inventory-instructor.j2
    dest: "{{ config_libre.directory.conf }}/inventory/instructor.yml"
#    remote_src: yes
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
- name: "self : provision : Generate inventory {{ config_libre.directory.conf }}/inventory/students.yml"
  template:
    src: inventory-students.j2
    dest: "{{ config_libre.directory.conf }}/inventory/students.yml"
#    remote_src: yes
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
- name: "self : provision : Set infrastructure state to provisioned"
  set_fact:
    libre_infra: "{{ libre_infra|combine({'state': 'provisioned' }, recursive=True) }}"
- name: "self : provision : Update infrastructure config file {{ config_libre.directory.conf }}/{{ r_infra_config_file }}"
  template:
    src: templates/libre-infra.j2
    dest: "{{ config_libre.directory.conf }}/{{ r_infra_config_file }}"
- name: "self : provision : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_result_file, errors='ignore') | default('') }}"
  delegate_to: localhost
- name: "self : provision : Generate LIBRE report at {{ r_libre_result_file }}"
  template:
    src: templates/libre_report-provision.j2
    dest: "{{ r_libre_result_file }}"
#    owner: root
    group: "{{ r_libre_group }}"
    mode: 0666
  delegate_to: localhost
- name: "self : provision : Log provision action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "Self-Hosted infrastructure is Provisioned"
    log_component: infra-self
    log_action: provision self-hosted
