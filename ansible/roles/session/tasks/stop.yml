---
# Stop pre-tasks
- name: "stop : Stop course {{ libre_course.id }}"
  include_tasks: "{{ r_session_dir_course }}/{{ r_session_dir_course_playbooks}}/stop.yml"
  when: r_session_dir_course_playbooks_details.stat.exists
- name: "stop : Stop LIBRE-instructor web application for session {{ libre_session.id }}"
  docker_container:
    name: "libre-instructor-{{ libre_session.id }}"
    image: startx/libre-instructor:latest
    state: stopped
  become: yes

- name: "stop : Set session state to stopped"
  set_fact:
    libre_session: "{{ libre_session|combine({'state': 'stopped' }, recursive=True) }}"
# Use config to reload libre_session and record state to session file
- name: "stop : Config {{ config_session.type }} session type reload"
  include_tasks: "config/{{ config_session.type }}.yml"

# Stop tasks
- name: "stop : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_result_file, errors='ignore') | default('') }}"
  delegate_to: localhost
- name: "stop : Generate LIBRE report at {{ r_libre_result_file }}"
  template:
    src: libre_report-stop.j2
    dest: "{{ r_libre_result_file }}"
#    owner: root
    group: "{{ r_libre_group }}"
    mode: 0666
  delegate_to: localhost
- name: "stop : Log stop action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "Session {{ libre_session.id }} with course {{ libre_session.course }} is stopped"
    log_component: session
    log_action: stop session {{ libre_session.id }}
