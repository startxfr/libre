---
# Uninstall pre-tasks
- name: "uninstall : Uninstall course playbook"
  include_tasks: "{{ r_session_dir_course }}/{{  training_dir_course_playbooks | default(r_session_dir_course_playbooks) }}/uninstall.yml"
  when: r_session_dir_course_playbooks_details.stat.exists

# Uninstall tasks
#- name: "uninstall : Start repository uninstall"
#  include_role:
#    name: repository
#    tasks_from: uninstall
#  become: yes

- name: "uninstall : Remove course directory content {{ r_session_dir_course }}"
  file:
    state: absent
    path: "{{ r_session_dir_course }}"

- name: "uninstall : Remove session configuration {{ config_libre.directory.conf }}/{{ r_session_config_file }} file"
  file:
    state: absent
    path: "{{ config_libre.directory.conf }}/{{ r_session_config_file }}"

- name: "uninstall : Start repository uninstall"
  include_role:
    name: repository
    tasks_from: uninstall
- name: "uninstall : Reload"
  include_tasks: load.yml
  
- name: "uninstall : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_result_file, errors='ignore') | default('') }}"
  delegate_to: localhost
- name: "uninstall : Generate LIBRE report at {{ r_libre_result_file }}"
  template:
    src: libre_report-uninstall.j2
    dest: "{{ r_libre_result_file }}"
#    owner: "{{ libre_user | default(r_libre_user) }}"
    group: "{{ libre_group | default(r_libre_group) }}"
    mode: 0666
  delegate_to: localhost
- name: "uninstall : Log uninstall action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "Session {{ libre_session.id }} with course {{ libre_session.course }} is uninstalled"
    log_component: session
    log_action: uninstall session {{ libre_session.id }}
