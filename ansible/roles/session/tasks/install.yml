---
# Install pre-tasks
- name: "install : Start session pre-installation checks"
  include_tasks: install-precheck.yml
  when: not session_install_precheck or
            session_install_precheck is undefined

# Install tasks
- name: "install : Start session install sequence"
  block:
    - name: "install : Start repository install post-check"
      include_role:
        name: repository
        tasks_from: install-postcheck
  rescue:
    - name: "install : Repository post-check install is not valid"
      debug:
        msg: Failing back to installing repository first 
    - name: "install : Start instructor install"
      include_role:
        name: repository
        tasks_from: install
    - name: "install : Reload session"
      include_tasks: load.yml

- name: "install : Get user session configuration file {{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_session }} details"
  stat:
    path: "{{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_session }}"
  register: r_libre_session_userconf_details

- name: "install : Generate user session configuration from {{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_session }}"
  template:
    src: session.j2
    dest: "{{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_session }}"
    mode: 0664
  when: not r_libre_session_userconf_details.stat.exists or
            r_libre_force_upgrade
- name: "install : Reload user session configuration {{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_session }} file details"
  stat:
    path: "{{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_session }}"
  register: r_libre_session_userconf_details
- name: "install : Reload user session configuration from {{ r_libre_userconfig_dir }}/{{ r_libre_myconfile_session }}"
  set_fact:
    config_session: "{{ lookup('file', r_libre_userconfig_dir + '/' + r_libre_myconfile_session) | from_yaml | default('') }}"

- name: "install : Start configuration because no session configuration {{ config_libre.directory.conf }}/{{ r_session_config_file }} file found"
  include_tasks: "config.yml"
  when: not r_session_conf_details.stat.exists

- name: "install : Remove previous training course content from directory {{ r_session_dir_course }}"
  file:
    state: absent
    path: "{{ r_session_dir_course }}/"
  when: r_course_manifest_details.stat.exists

- name: "install : Get repository course {{ libre_session.course }} details"
  stat:
    path: "{{ config_repository.local }}{{ config_repository.base }}/{{ libre_session.course }}"
  register: session_repository_course_details

- name: "install : Check if course {{ libre_session.course }} is in local repository"
  fail:
    msg: "Could not find course {{ libre_session.course }} in local repository {{ config_repository.local }}{{ config_repository.base }}"
  when: not session_repository_course_details.stat.exists

- name: "install : Copy course {{ libre_session.course }} content from local repository to {{ r_session_dir_course }}"
  synchronize:
    src: "{{ config_repository.local }}{{ config_repository.base }}/{{ libre_session.course }}/"
    dest: "{{ r_session_dir_course }}"
    recursive: yes
    delete: yes
  delegate_to: "{{ inventory_hostname }}"

- name: "install : Reload session course-manifest"
  include_tasks: load/course-manifest.yml

- name: "install : Install course playbook"
  include_tasks: "{{ r_session_dir_course }}/{{ r_session_dir_course_playbooks}}/install.yml"
  when: r_session_dir_course_playbooks_details.stat.exists

- name: "install : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_tmp + '/' + r_libre_tmpfile, errors='ignore') | default('') }}"
- name: "install : Generate session report at {{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
  template:
    src: libre_report-install.j2
    dest: "{{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
    mode: 0664
- name: "install : Log install action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "Session {{ libre_session.id }} with course {{ libre_session.course }} is installed"
    log_component: session
    log_action: install

# Install post-tasks
- name: "install : Start session post-installation checks"
  include_tasks: install-postcheck.yml
