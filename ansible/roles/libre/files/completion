#!/bin/bash

# Auto-completion for chapter
_libre_chapter()
{
  local available="start list stop status usage info version"
  if [ "${#COMP_WORDS[@]}" == "2" ]; then
    local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
    if [ "${#suggestions[@]}" == "1" ]; then
      local number=$(echo ${suggestions[0]/%\ */})
      COMPREPLY=("$number")
    else
      COMPREPLY=("${suggestions[@]}")
    fi
  elif [ "${#COMP_WORDS[@]}" == "3" && "${COMP_WORDS[1]}" == "start" ]; then
    available="1 2 3 4 5 6 7 8 9 10"
    local suggestions=($(compgen -W "$available" "${COMP_WORDS[2]}"))
    if [ "${#suggestions[@]}" == "1" ]; then
      local number=$(echo ${suggestions[0]/%\ */})
      COMPREPLY=("$number")
    else
      COMPREPLY=("${suggestions[@]}")
    fi
  else
    return
  fi
}

# Auto-completion for infra
_libre_infra()
{
  local available="aws prem self usage info status history version"
  local available2="config provision post-provision deprovision status history"
  local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
  local suggestions2=($(compgen -W "$available2" "${COMP_WORDS[2]}"))
  if [ "${COMP_CWORD}" == "0" ]; then
      COMPREPLY=("${suggestions[@]}")
  elif [ "${COMP_CWORD}" == "1" ]; then
    if [ "${#suggestions[@]}" == "1" ]; then
      local number=$(echo ${suggestions[0]/%\ */})
      COMPREPLY=("$number")
    else
      COMPREPLY=("${suggestions[@]}")
    fi
  elif [ "${COMP_CWORD}" == "2" ]; then
    if [ "${#suggestions2[@]}" == "1" ]; then
      local number=$(echo ${suggestions2[0]/%\ */})
      COMPREPLY=("$number")
    else
      COMPREPLY=("${suggestions2[@]}")
    fi
  else
    return 0;
  fi
  return 0;
}

# Auto-completion for bootstrap
_libre_bootstrap()
{
  local available="install uninstall status history usage info version"
  if [ "${#COMP_WORDS[@]}" != "2" ]; then
    return
  fi
  local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
  if [ "${#suggestions[@]}" == "1" ]; then
    local number=$(echo ${suggestions[0]/%\ */})
    COMPREPLY=("$number")
  else
    COMPREPLY=("${suggestions[@]}")
  fi
}

# Auto-completion for instructor
_libre_instructor()
{
  local available="install uninstall status history usage info version"
  if [ "${#COMP_WORDS[@]}" != "2" ]; then
    return
  fi
  local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
  if [ "${#suggestions[@]}" == "1" ]; then
    local number=$(echo ${suggestions[0]/%\ */})
    COMPREPLY=("$number")
  else
    COMPREPLY=("${suggestions[@]}")
  fi
}

# Auto-completion for repository
_libre_repository()
{
  local available="install uninstall status history usage info version"
  if [ "${#COMP_WORDS[@]}" != "2" ]; then
    return
  fi
  local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
  if [ "${#suggestions[@]}" == "1" ]; then
    local number=$(echo ${suggestions[0]/%\ */})
    COMPREPLY=("$number")
  else
    COMPREPLY=("${suggestions[@]}")
  fi
}

# Auto-completion for lab
_libre_lab()
{
  local available="start stop reset grade status usage info version"
  if [ "${#COMP_WORDS[@]}" != "2" ]; then
    return
  fi
  local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
  if [ "${#suggestions[@]}" == "1" ]; then
    local number=$(echo ${suggestions[0]/%\ */})
    COMPREPLY=("$number")
  else
    COMPREPLY=("${suggestions[@]}")
  fi
}

# Auto-completion for session
_libre_session()
{
  local available="config install start stop uninstall status history usage info version"
  if [ "${#COMP_WORDS[@]}" != "2" ]; then
    return
  fi
  local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
  if [ "${#suggestions[@]}" == "1" ]; then
    local number=$(echo ${suggestions[0]/%\ */})
    COMPREPLY=("$number")
  else
    COMPREPLY=("${suggestions[@]}")
  fi
}

# Auto-completion for student
_libre_student()
{
  local available="install uninstall status history usage info version"
  if [ "${#COMP_WORDS[@]}" != "2" ]; then
    return
  fi
  local suggestions=($(compgen -W "$available" "${COMP_WORDS[1]}"))
  if [ "${#suggestions[@]}" == "1" ]; then
    local number=$(echo ${suggestions[0]/%\ */})
    COMPREPLY=("$number")
  else
    COMPREPLY=("${suggestions[@]}")
  fi
}

complete -F _libre_chapter libre-chapter
complete -F _libre_infra libre-infra
complete -F _libre_instructor libre-instructor
complete -F _libre_bootstrap libre-bootstrap
complete -F _libre_repository libre-repository
complete -F _libre_lab libre-lab
complete -F _libre_session libre-session
complete -F _libre_student libre-student
