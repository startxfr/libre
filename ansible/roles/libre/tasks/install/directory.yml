---
- name: "install_directory : Get {{ config_libre.directory.conf }} directory details"
  stat:
    path: "{{ config_libre.directory.conf }}"
  register: r_libre_dir_conf_details
- name: "install_directory : Create training configuration directory {{ config_libre.directory.conf }}"
  file:
    state: directory
    path: "{{ config_libre.directory.conf }}"
    mode: 0775
    owner: "{{ libre_user | default(r_libre_user) }}"
    group: "{{ r_libre_group }}"
    recurse: yes
  when: not r_libre_dir_conf_details.stat.exists
- name: "install_directory : Reload {{ config_libre.directory.conf }} directory details"
  stat:
    path: "{{ config_libre.directory.conf }}"
  register: r_libre_dir_conf_details
  when: not r_libre_dir_conf_details.stat.exists

- name: "install_directory : Create training directory {{ config_libre.directory.base }}"
  file:
    state: directory
    path: "{{ config_libre.directory.base }}"
    mode: 0775
    owner: "{{ libre_user | default(r_libre_user) }}"
    group: "{{ r_libre_group }}"
    recurse: yes
  when: r_libre_dir_details.stat is undefined or not r_libre_dir_details.stat.exists
- name: "install_directory : Reload {{ config_libre.directory.base }} directory details"
  stat:
    path: "{{ config_libre.directory.base }}"
  register: r_libre_dir_details
  when: r_libre_dir_details.stat is undefined or not r_libre_dir_details.stat.exists

- name: "install_directory : Create training course directory {{ config_libre.directory.course }}"
  file:
    state: directory
    path: "{{ config_libre.directory.course }}"
    mode: 0775
    owner: "{{ libre_user | default(r_libre_user) }}"
    group: "{{ r_libre_group }}"
    recurse: yes
  when: r_libre_dir_course_details.stat is undefined or not r_libre_dir_course_details.stat.exists
- name: "install_directory : Reload {{ config_libre.directory.course }} directory details"
  stat:
    path: "{{ config_libre.directory.course }}"
  register: r_libre_dir_course_details
  when: r_libre_dir_course_details.stat is undefined or not r_libre_dir_course_details.stat.exists

- name: "install_directory : Create training collect directory {{ config_libre.directory.collect }}"
  file:
    state: directory
    path: "{{ config_libre.directory.collect }}"
    mode: 0777
    owner: "{{ libre_user | default(r_libre_user) }}"
    group: "{{ r_libre_group }}"
    serole: object_r
    setype: svirt_sandbox_file_t
    seuser: system_u
    unsafe_writes: yes
    recurse: yes
  when: r_libre_dir_collect_details.stat is undefined or not r_libre_dir_collect_details.stat.exists
- name: "install_directory : Reload {{ config_libre.directory.collect }} directory details"
  stat:
    path: "{{ config_libre.directory.collect }}"
  register: r_libre_dir_collect_details
  when: r_libre_dir_collect_details.stat is undefined or not r_libre_dir_collect_details.stat.exists
  
- name: "install_directory : Get {{ config_libre.directory.collect }}/log.yml file details"
  stat:
    path: "{{ config_libre.directory.collect }}/log.yml"
  register: r_libre_dir_collect_log_details

- name: "install_directory : Ensure log file {{ config_libre.directory.collect }}/log.yml exist"
  copy:
    content: ""
    dest: "{{ config_libre.directory.collect }}/log.yml"
#    remote_src: yes
    force: no
    mode: 0664
    owner: "{{ libre_user | default(r_libre_user) }}"
    group: "{{ r_libre_group }}"
  when: not r_libre_dir_collect_log_details.stat.exists
