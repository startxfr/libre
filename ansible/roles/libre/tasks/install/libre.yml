---
- name: "install_libre : Get {{ r_libre_dest_bin }}/libre-{{ config_libre.application.type | default('instructor') | string }} file details"
  stat:
    path: "{{ r_libre_dest_bin }}/libre-{{ config_libre.application.type }}"
  register: r_libre_binary_details
- name: "install_libre : clone LIBRE materials from {{ config_libre.application.source.repo }}"
  git:
    repo: "{{ config_libre.application.source.repo }}"
    dest: "{{ config_libre.application.source.tmp }}"
    version: "{{ config_libre.application.source.branch }}"
  when: not r_libre_binary_details.stat.exists or
        not r_libre_binary_details.stat.executable or
            r_libre_force_upgrade
- name: "install_libre : move LIBRE library content to {{ r_libre_dest_lib }}"
  copy:
    src: "{{ config_libre.application.source.tmp }}{{ config_libre.application.source.base }}/lib/{{ libname }}"
    dest: "{{ r_libre_dest_lib }}"
    remote_src: yes
    mode: 0764
#    owner: root
    group: root
  loop: "{{ r_libre_files_library }}"
  loop_control:
    loop_var: libname
    label: "{{ libname }}"
  when: not r_libre_binary_details.stat.exists or
        not r_libre_binary_details.stat.executable or
            r_libre_force_upgrade
            
#- name: "install_libre : move LIBRE ansible content to {{ r_libre_dest_ansible }} in remote node"
#  copy:
#    src: "{{ config_libre.application.source.tmp }}{{ config_libre.application.source.base }}/ansible/"
#    dest: "{{ r_libre_dest_ansible }}"
#    remote_src: yes
#  delegate_to: "{{ inventory_hostname }}"
#  when: (not r_libre_binary_details.stat.exists or
#         not r_libre_binary_details.stat.executable or
#            r_libre_force_upgrade)
#        and inventory_hostname in ['127.0.0.1', 'localhost']
- name: "install_libre : move LIBRE ansible content to {{ r_libre_dest_ansible }} in local node"
  synchronize:
    src: "{{ config_libre.application.source.tmp }}{{ config_libre.application.source.base }}/ansible/"
    dest: "{{ r_libre_dest_ansible }}"
    recursive: yes
    delete: yes
  delegate_to: "{{ inventory_hostname }}"
  when: (not r_libre_binary_details.stat.exists or
         not r_libre_binary_details.stat.executable or
            r_libre_force_upgrade)
#        and inventory_hostname not in ['127.0.0.1', 'localhost']
- name: "install_libre : move LIBRE instructor binary content to {{ r_libre_dest_bin }}"
  copy:
    src: "{{ config_libre.application.source.tmp }}{{ config_libre.application.source.base }}/bin/{{ binname }}"
    dest: "{{ r_libre_dest_bin }}"
    remote_src: yes
    mode: 0775
#    owner: root
    group: root
  loop: "{{ r_libre_files_binary_instructor }}"
  loop_control:
    loop_var: binname
    label: "{{ binname }}"
  when: >
    (libre_type != "student" and config_libre.application.type == "instructor") and
    (
      not r_libre_binary_details.stat.exists or
      not r_libre_binary_details.stat.executable or
          r_libre_force_upgrade
    )
- name: "install_libre : move LIBRE student binary content to {{ r_libre_dest_bin }}"
  copy:
    src: "{{ config_libre.application.source.tmp }}{{ config_libre.application.source.base }}/bin/{{ binname }}"
    dest: "{{ r_libre_dest_bin }}"
    remote_src: yes
    mode: preserve
#    owner: root
    group: root
  loop: "{{ r_libre_files_binary_student }}"
  loop_control:
    loop_var: binname
    label: "{{ binname }}"
  when: >
    (libre_type == "student" or config_libre.application.type != "instructor") and
    (
      not r_libre_binary_details.stat.exists or
      not r_libre_binary_details.stat.executable or
          r_libre_force_upgrade
    )
- name: "install_libre : move LIBRE auto-completion script to /etc/bash_completion.d/libre"
  copy:
    src: "{{ role_path }}/files/completion"
    dest: "/etc/bash_completion.d/libre"
    mode: 0775
#    owner: root
    group: root
  when: not r_libre_binary_details.stat.exists or
        not r_libre_binary_details.stat.executable or
            r_libre_force_upgrade
- name: "install_libre : move LIBRE profile script to /etc/profile.d/libre.sh"
  template:
    src: "{{ role_path }}/templates/bash_profile.j2"
    dest: "/etc/profile.d/libre.sh"
    mode: 0664
#    owner: root
    group: root
- name: "install_libre : Remove tempory LIBRE clone directory {{ config_libre.application.source.tmp }}"
  file:
    state: absent
    path: "{{ config_libre.application.source.tmp }}"
  when: not r_libre_binary_details.stat.exists or
        not r_libre_binary_details.stat.executable or
            r_libre_force_upgrade
